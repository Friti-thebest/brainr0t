-- Cabeçalho e serviços
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local uis = game:GetService("UserInputService")
local ts = game:GetService("TeleportService")
local http = game:GetService("HttpService")
local runService = game:GetService("RunService")

-- Variáveis
local running = true
local minimized = false
local noclipEnabled = false
local superJumpEnabled = false
local espEnabled = false
local roubarEnabled = false
local roubarPlataforma = nil
local voandoRoubo = false
local espParts = {}
local goEnabled = false
local shiftlockEnabled = false

-- Detecta se é dispositivo móvel
local isMobile = game:GetService("UserInputService").TouchEnabled

-- Carrega a Mercury Library
local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/source.lua"))()

-- Força a interface a ser visível em dispositivos móveis
game:GetService("StarterGui"):SetCore("TouchCameraMovementMode", "UserChoice")
game:GetService("StarterGui"):SetCore("DevConsoleVisible", false)

-- Cria a janela principal
local GUI = Mercury:Create{
    Name = "FRITISCRIPTS",
    Size = isMobile and UDim2.new(0, 300, 0, 350) or UDim2.new(0, 450, 0, 300),
    Theme = Mercury.Themes.Dark
}

-- Cria a aba principal
local MainTab = GUI:Tab{
    Name = "Principal",
    Icon = "rbxassetid://4483345998"
}

-- Botões e Toggles
MainTab:Toggle{
    Name = "Noclip",
    StartingState = false,
    Description = "Ativa/Desativa atravessar paredes",
    Callback = function(state)
        noclipEnabled = state
    end    
}

MainTab:Toggle{
    Name = "Super Jump",
    StartingState = false,
    Description = "Ativa/Desativa pulo alto",
    Callback = function(state)
        superJumpEnabled = state
    end    
}

MainTab:Toggle{
    Name = "SHIFTLOCK",
    StartingState = false,
    Description = "Trava a câmera como o Shift do teclado",
    Callback = function(state)
        shiftlockEnabled = state
        if state then
            game:GetService("Players").LocalPlayer.DevEnableMouseLock = true
        else
            game:GetService("Players").LocalPlayer.DevEnableMouseLock = false
        end
    end    
}

MainTab:Toggle{
    Name = "ESP",
    StartingState = false,
    Description = "Veja outros jogadores",
    Callback = function(state)
        espEnabled = state
        if not espEnabled then
            for _, part in pairs(espParts) do
                pcall(function() part:Destroy() end)
            end
            espParts = {}
        end
    end    
}

MainTab:Toggle{
    Name = "Roubar (Steal)",
    StartingState = false,
    Description = "Cria plataforma e permite voar até ela",
    Callback = function(state)
        roubarEnabled = state
        if not state then
            if roubarPlataforma and roubarPlataforma.Parent then
                roubarPlataforma:Destroy()
                roubarPlataforma = nil
            end
            voandoRoubo = false
        end
    end    
}

MainTab:Button{
    Name = "Steal2",
    Description = "Teleporta para o jogador mais próximo",
    Callback = function()
        local nearestPlayer = nil
        local shortestDistance = math.huge
        
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (p.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = p
                end
            end
        end
        
        if nearestPlayer then
            player.Character.HumanoidRootPart.CFrame = nearestPlayer.Character.HumanoidRootPart.CFrame
        end
    end    
}

MainTab:Button{
    Name = "Go",
    Description = "Voa até o jogador mais próximo",
    Callback = function()
        local nearestPlayer = nil
        local shortestDistance = math.huge
        
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (p.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = p
                end
            end
        end
        
        if nearestPlayer then
            local targetPos = nearestPlayer.Character.HumanoidRootPart.Position
            local direction = (targetPos - player.Character.HumanoidRootPart.Position).Unit
            local distance = (targetPos - player.Character.HumanoidRootPart.Position).Magnitude
            local speed = 2.05
            
            for i = 1, distance, speed do
                if not running then break end
                player.Character.HumanoidRootPart.CFrame = CFrame.new(
                    player.Character.HumanoidRootPart.Position + direction * speed
                )
                wait()
            end
        end
    end    
}

-- Teclado
uis.InputBegan:Connect(function(input, gameProcessed)
    if not running or gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.Space and superJumpEnabled then
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if hrp then 
            hrp.Velocity = Vector3.new(0, 120, 0) 
        end
    end
end)

-- Função para encontrar o jogador mais próximo
local function encontrarJogadorProximo()
    local jogadorMaisProximo = nil
    local menorDistancia = math.huge
    
    for _, p in ipairs(game.Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local distancia = (p.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distancia < menorDistancia then
                menorDistancia = distancia
                jogadorMaisProximo = p
            end
        end
    end
    
    return jogadorMaisProximo
end

-- Loops principais
game:GetService("RunService").Stepped:Connect(function()
    if noclipEnabled and player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
    
    if superJumpEnabled and player.Character then
        player.Character.Humanoid.JumpPower = 100
    else
        if player.Character then
            player.Character.Humanoid.JumpPower = 50
        end
    end

    if espEnabled then
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") and not espParts[p.Name] then
                local box = Instance.new("BoxHandleAdornment")
                box.Size = Vector3.new(6, 6, 6)
                box.Color3 = Color3.new(1, 0, 0)
                box.AlwaysOnTop = true
                box.ZIndex = 10
                box.Adornee = p.Character.HumanoidRootPart
                box.Transparency = 0.3
                box.Name = "ESPBox"
                box.Parent = p.Character.HumanoidRootPart
                espParts[p.Name] = box
            end
        end
    end

    if voandoRoubo and roubarPlataforma and player.Character then
        local hrp = player.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            local targetPosition = roubarPlataforma.Position + Vector3.new(0, 3, 0)
            local dir = (targetPosition - hrp.Position)
            
            if dir.Magnitude < 3 then
                -- Chegou na plataforma
                hrp.Velocity = Vector3.zero
                voandoRoubo = false
            else
                -- Plana suavemente em direção à plataforma
                local velocidadeHorizontal = dir.Unit * 20
                local velocidadeVertical = Vector3.new(0, 0, 0)
                hrp.Velocity = (velocidadeHorizontal + velocidadeVertical) * 2.05
            end
        end
    end

    if goEnabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local alvoProximo = encontrarJogadorProximo()
        if alvoProximo then
            local hrp = player.Character.HumanoidRootPart
            local targetPosition = alvoProximo.Character.HumanoidRootPart.Position -- Remove o offset de altura para ficar na mesma altura
            local dir = (targetPosition - hrp.Position)
            
            -- Plana/voa em direção ao alvo
            local velocidadeHorizontal = dir.Unit * 25 -- Velocidade horizontal um pouco maior
            local velocidadeVertical = Vector3.new(0, 0, 0)
            hrp.Velocity = (velocidadeHorizontal + velocidadeVertical) * 2.05
        end
    end
end)

-- ESP Loop
spawn(function()
    while wait() do
        if espEnabled then
            for _, p in pairs(game.Players:GetPlayers()) do
                if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                    local esp = espParts[p.Name]
                    if not esp or not esp.Parent then
                        esp = Instance.new("BoxHandleAdornment")
                        esp.Name = "ESP"
                        esp.Size = Vector3.new(4, 5, 1)
                        esp.Color3 = Color3.new(1, 0, 0)
                        esp.Transparency = 0.5
                        esp.AlwaysOnTop = true
                        esp.Adornee = p.Character.HumanoidRootPart
                        esp.ZIndex = 5
                        esp.Parent = p.Character.HumanoidRootPart
                        espParts[p.Name] = esp
                    end
                end
            end
        end
    end
end)

-- Roubar (Steal) Loop
spawn(function()
    while wait() do
        if roubarEnabled then
            local nearestPlayer = nil
            local shortestDistance = math.huge
            
            for _, p in pairs(game.Players:GetPlayers()) do
                if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (p.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        nearestPlayer = p
                    end
                end
            end
            
            if nearestPlayer then
                if not roubarPlataforma or not roubarPlataforma.Parent then
                    roubarPlataforma = Instance.new("Part")
                    roubarPlataforma.Size = Vector3.new(5, 1, 5)
                    roubarPlataforma.Anchored = true
                    roubarPlataforma.CanCollide = true
                    roubarPlataforma.Transparency = 0.7
                    roubarPlataforma.Parent = workspace
                end
                
                local targetPos = nearestPlayer.Character.HumanoidRootPart.Position
                roubarPlataforma.CFrame = CFrame.new(targetPos.X, targetPos.Y - 4, targetPos.Z)
                
                if not voandoRoubo then
                    voandoRoubo = true
                    spawn(function()
                        while voandoRoubo and wait() do
                            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                                player.Character.HumanoidRootPart.CFrame = CFrame.new(
                                    targetPos.X,
                                    targetPos.Y - 2,
                                    targetPos.Z
                                )
                            end
                        end
                    end)
                end
            end
        end
    end
end)

-- Força a interface a ser visível após um pequeno delay
spawn(function()
    wait(1)
    for _, gui in pairs(game:GetService("CoreGui"):GetChildren()) do
        if gui.Name == "Mercury" then
            gui.Enabled = true
            gui.ResetOnSpawn = false
            
            -- Ajusta o tamanho para mobile se necessário
            if isMobile then
                if gui:FindFirstChild("Main") then
                    gui.Main.Size = UDim2.new(0, 300, 0, 350)
                    -- Ajusta o tamanho da fonte para mobile
                    for _, obj in pairs(gui:GetDescendants()) do
                        if obj:IsA("TextLabel") or obj:IsA("TextButton") then
                            obj.TextSize = obj.TextSize * 0.8
                        end
                    end
                end
            end
        end
    end
end) 
